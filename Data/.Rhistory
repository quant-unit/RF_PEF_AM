setwd(wd$eps2)
setEPS()
postscript("MPP-Visualization2.eps",
width = 3, height = 2,
family = "Helvetica", pointsize = 2)
}
}
#par(par_default)
#par(mar = c(4.5,4.5,2,1), cex = CEX)
plot(mpp, type = "h", xlim = c(0, 10), ylim = c(-2, 2), ylab = "Cash Flow", xlab = "Time (in Quarters)",
cex.lab = 0.8, xaxs = "i", cex.axis = 0.8, at = seq(-10,10,1))
points(mpp, pch = 22, cex = 2, lwd = 1)
text(x = mpp$Time,y = c(smargin, -smargin), c(latex2exp::TeX('$\\c_1'),latex2exp::TeX('$\\d_1')), cex=1)
text(x = mpp$Time,y = mpp$CashFlow - c(smargin, -smargin), c(latex2exp::TeX('$\\-C_1'),latex2exp::TeX('$\\D_1')), cex=1)
abline(h = 0, v = 0)
abline(v = seq(20), lty = 2, col= "darkgrey")
if(meth != "reduced-form"){
lines(mpp2, type = "h")
points(mpp2, pch = 21, cex = 2, lwd = 1)
text(x = mpp2$Time,y = c(smargin, -smargin), c(latex2exp::TeX('$\\c_3'),latex2exp::TeX('$\\d_3')), cex=1)
text(x = mpp2$Time,y = mpp2$CashFlow - c(smargin, -smargin), c(latex2exp::TeX('$\\C_3'),latex2exp::TeX('$\\D_3')), cex=1)
lines(mpp3, type = "h")
points(mpp3, pch = 25, cex = 2, lwd = 1)
text(x = mpp3$Time,y = smargin, c(latex2exp::TeX('$\\c_2')), cex=1)
text(x = mpp3$Time,y = mpp3$CashFlow - c(smargin), c(latex2exp::TeX('$\\C_2')), cex=1)
} else {
valueprocess <- data.frame(Time = 4.5, CashFlow = 0.9)
value.col <- "black"
lines(valueprocess, type = "h", col = value.col)
points(valueprocess, pch = 22, cex = 2, lwd = 1, col = value.col)
text(x = valueprocess$Time,y = c(-smargin), c(latex2exp::TeX('$\\t')), cex = 1, col = value.col)
text(x = valueprocess$Time,y = valueprocess$CashFlow + c(smargin), c(latex2exp::TeX('$\\V_1(t)')), cex = 1, col = value.col)
}
if(create.eps){
dev.off()
setwd(old.wd)
}
}
mMMP_chart2(size = "big")
mMMP_chart2(size = "small")
par(mfrow=c(2,1))
mMMP_chart()
mMMP_chart2()
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("MPP-Visualization-Combi.eps",
width = 5, height = 2.5,
family = "Helvetica", pointsize = 2)
par(mfrow=c(1,2))
mMMP_chart()
mMMP_chart2()
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("MPP-Visualization-Combi.eps",
width = 5, height = 2.5,
family = "Helvetica", pointsize = 2)
par(mfrow=c(1,2), cex=1.2)
mMMP_chart()
mMMP_chart2()
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("MPP-Visualization-Combi.eps",
width = 5, height = 2.5,
family = "Helvetica", pointsize = 3)
par(mfrow=c(1,2), cex=1.2)
mMMP_chart()
mMMP_chart2()
dev.off()
setwd(old.wd)
par()
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("MPP-Visualization-Combi.eps",
width = 5, height = 2.5,
family = "Helvetica", pointsize = 3)
par(mfrow=c(1,2), mar = c(4.5, 3.5, 2.0, 1.0), cex=1.2)
mMMP_chart()
mMMP_chart2()
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("MPP-Visualization-Combi.eps",
width = 5, height = 2.5,
family = "Helvetica", pointsize = 3)
par(mfrow=c(1,2), mar = c(4.5, 2.5, 2.0, 1.0), cex=1.2)
mMMP_chart()
mMMP_chart2()
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("MPP-Visualization-Combi.eps",
width = 5, height = 2.5,
family = "Helvetica", pointsize = 3)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=1.2)
mMMP_chart()
mMMP_chart2()
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("MPP-Visualization-Combi.eps",
width = 5, height = 2,
family = "Helvetica", pointsize = 3)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=1.2)
mMMP_chart()
mMMP_chart2()
dev.off()
setwd(old.wd)
create.eps <- TRUE
empirical.timing.multiple <- function(size = "big"){
dy.bo <- ecdf(G.p2c$P2C.multi1[G.p2c$Fund_InvestTypes == "BO"])
st.bo <- ecdf(g.sum$MOIC[g.sum$Type == "BO"])
dy.vc <- ecdf(G.p2c$P2C.multi1[G.p2c$Fund_InvestTypes == "VC"])
st.vc <- ecdf(g.sum$MOIC[g.sum$Type == "VC"])
if(create.eps){
old.wd <- getwd()
if(size == "big"){
setwd(wd$eps)
setEPS()
postscript("Empirical-Timing-Multiple.eps", width = 5, height = 2.5,
family = "Helvetica", pointsize = 2)
} else {
setwd(wd$eps2)
setEPS()
postscript("Empirical-Timing-Multiple_small.eps",
width = 3.25, height = 3.25/2,
family = "Helvetica", pointsize = 1)
}
if(size == "bigger"){
setwd(wd$eps)
setEPS()
postscript("Empirical-Timing-Multiple_bigger.eps", width = 6, height = 4.5/2,
family = "Helvetica", pointsize = 3)
}
}
cex.par <- 1.3
if(size == "small") cex.par <- 1
par(mfrow = c(1, 2), mar = c(4.5, 4.5, 2, 1), cex = cex.par)
plot(np.cox$BO$KaMe, main = "Timing", xlab = "Timing", ylab = "Survival Function", conf.int = FALSE)
lines(np.cox$VC$KaMe, xlab = "Timing", ylab = "Survival Function", conf.int = FALSE, lty=2)
legend("topright", bty = "n", legend = c("BO", "VC"), lty = c(1,2))
curve(st.bo, 0, 10, ylim = c(0, 1), xlab = "Multiple", ylab = "ECDF", main = "Multiple")
# curve(dy.bo, 0, 10, add = TRUE, lty = 2)
curve(st.vc, 0, 10, ylim = c(0, 1), xlab = "Multiple", ylab = "ECDF", main = "VC", add = TRUE, lty=2)
# curve(dy.vc, 0, 10, add = TRUE, lty = 2)
legend("bottomright", bty = "n", legend = c("BO", "VC"), lty = c(1,2))
if(create.eps){
dev.off()
setwd(old.wd)
}
}
empirical.timing.multiple("big")
create.eps <- FALSE
## 4) Simulate ------
par(par_default)
setwd(wd$code)
source("ExitDynamics_Bivariate.R")
set.seed(98)
system.time(x <- simulate$Final.Simulator(5000, N = c(3, 15), "VC"))
setwd(wd$data)
# saveRDS(x, "test_simulation_result_newPubSce.RDS")
# x <- readRDS("test_simulation_result_newPubSce.RDS")
tail(x$PublicScenario)
x$Output$N_3$independent
x$df.out$N_3$independent
set.seed(98)
# saveRDS(x, "test_simulation_result_newPubSce.RDS")
x <- readRDS("test_simulation_result_newPubSce.RDS")
tail(x$PublicScenario)
x$Output$N_3$independent
x$df.out$N_3$independent
cf2quantiles <- function(list.in, no.companies) {
q.seq <- seq(0,1,0.01)
df.N3 <- data.frame(do.call(rbind, list.in)) / no.companies
df.N3 <- data.frame(apply(df.N3, 2, function(x){quantile(x, q.seq)}))
if(create.eps){
par.old <- par()
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript(paste("Simulation_ECDF_",no.companies , "_companies.eps",sep=""),
width = 3, height = 2.5, family = "Helvetica", pointsize = 3)
}
par(cex = 1.5, mar = c(4.5, 4.5, 1, 1))
plot(df.N3[, paste("X", 5, sep="")], q.seq, xlim = c(0,5), type = "l",
# main = paste(no.companies,"company VC fund"),
xlab = "Cumulative cash flow per current valuation",
ylab = "ECDF")
lines(df.N3[, paste("X", 10, sep="")], q.seq, lty = 2)
abline(h = seq(0,1,0.1), col= "grey", lty = 3) ; abline(v=seq(0,10,1), col ="grey", lty = 3)
legend("bottomright", bty = "n", legend = c("Horizon:", "5 years", "10 years"),
lty = c(NA, 1,2 ))
invisible(df.N3)
if(create.eps) {
dev.off()
setwd(old.wd)
par(par.old)
}
}
df.3companies <- cf2quantiles(x$df.out$N_3$independent, 3)
df.15companies <- cf2quantiles(x$df.out$N_15$independent, 15)
if(FALSE) {
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("Simulation-Combi.eps",
width = 5, height = 3,
family = "Helvetica", pointsize = 3)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=1.2)
df.3companies <- cf2quantiles(x$df.out$N_3$independent, 3)
df.15companies <- cf2quantiles(x$df.out$N_15$independent, 15)
dev.off()
setwd(old.wd)
}
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("Simulation-Combi.eps",
width = 5, height = 3,
family = "Helvetica", pointsize = 3)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=1.2)
df.3companies <- cf2quantiles(x$df.out$N_3$independent, 3)
df.15companies <- cf2quantiles(x$df.out$N_15$independent, 15)
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("Simulation-Combi.eps",
width = 5, height = 2,
family = "Helvetica", pointsize = 3)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=1.2)
df.3companies <- cf2quantiles(x$df.out$N_3$independent, 3)
df.15companies <- cf2quantiles(x$df.out$N_15$independent, 15)
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("Simulation-Combi.eps",
width = 5, height = 2,
family = "Helvetica", pointsize = 2.5)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=1.2)
df.3companies <- cf2quantiles(x$df.out$N_3$independent, 3)
df.15companies <- cf2quantiles(x$df.out$N_15$independent, 15)
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("Simulation-Combi.eps",
width = 5, height = 2,
family = "Helvetica", pointsize = 2.5)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=1)
df.3companies <- cf2quantiles(x$df.out$N_3$independent, 3)
df.15companies <- cf2quantiles(x$df.out$N_15$independent, 15)
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("Simulation-Combi.eps",
width = 5, height = 2,
family = "Helvetica", pointsize = 2)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=1)
df.3companies <- cf2quantiles(x$df.out$N_3$independent, 3)
df.15companies <- cf2quantiles(x$df.out$N_15$independent, 15)
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("Simulation-Combi.eps",
width = 5, height = 2,
family = "Helvetica", pointsize = 1)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=1)
df.3companies <- cf2quantiles(x$df.out$N_3$independent, 3)
df.15companies <- cf2quantiles(x$df.out$N_15$independent, 15)
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("Simulation-Combi.eps",
width = 5, height = 2,
family = "Helvetica", pointsize = 1)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=1)
df.3companies <- cf2quantiles(x$df.out$N_3$independent, 3)
df.15companies <- cf2quantiles(x$df.out$N_15$independent, 15)
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("Simulation-Combi.eps",
width = 5, height = 2,
family = "Helvetica", pointsize = 1)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=1)
df.3companies <- cf2quantiles(x$df.out$N_3$independent, 3)
df.15companies <- cf2quantiles(x$df.out$N_15$independent, 15)
dev.off()
setwd(old.wd)
cf2quantiles <- function(list.in, no.companies) {
q.seq <- seq(0,1,0.01)
df.N3 <- data.frame(do.call(rbind, list.in)) / no.companies
df.N3 <- data.frame(apply(df.N3, 2, function(x){quantile(x, q.seq)}))
if(create.eps){
par.old <- par()
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript(paste("Simulation_ECDF_",no.companies , "_companies.eps",sep=""),
width = 3, height = 2.5, family = "Helvetica", pointsize = 3)
}
#par(cex = 1.5, mar = c(4.5, 4.5, 1, 1))
plot(df.N3[, paste("X", 5, sep="")], q.seq, xlim = c(0,5), type = "l",
# main = paste(no.companies,"company VC fund"),
xlab = "Cumulative cash flow per current value",
ylab = "ECDF")
lines(df.N3[, paste("X", 10, sep="")], q.seq, lty = 2)
abline(h = seq(0,1,0.1), col= "grey", lty = 3) ; abline(v=seq(0,10,1), col ="grey", lty = 3)
legend("bottomright", bty = "n", legend = c("Horizon:", "5 years", "10 years"),
lty = c(NA, 1,2 ))
invisible(df.N3)
if(create.eps) {
dev.off()
setwd(old.wd)
par(par.old)
}
}
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("Simulation-Combi.eps",
width = 5, height = 2,
family = "Helvetica", pointsize = 1)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=0.5)
df.3companies <- cf2quantiles(x$df.out$N_3$independent, 3)
df.15companies <- cf2quantiles(x$df.out$N_15$independent, 15)
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("Simulation-Combi.eps",
width = 5, height = 2,
family = "Helvetica", pointsize = 1)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=1)
df.3companies <- cf2quantiles(x$df.out$N_3$independent, 3)
df.15companies <- cf2quantiles(x$df.out$N_15$independent, 15)
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("Simulation-Combi.eps",
width = 5, height = 2,
family = "Helvetica", pointsize = 1)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=1.5)
df.3companies <- cf2quantiles(x$df.out$N_3$independent, 3)
df.15companies <- cf2quantiles(x$df.out$N_15$independent, 15)
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("Simulation-Combi.eps",
width = 5, height = 2,
family = "Helvetica", pointsize = 1.2)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=1.5)
df.3companies <- cf2quantiles(x$df.out$N_3$independent, 3)
df.15companies <- cf2quantiles(x$df.out$N_15$independent, 15)
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("Simulation-Combi.eps",
width = 5, height = 2,
family = "Helvetica", pointsize = 1.1)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=1.5)
df.3companies <- cf2quantiles(x$df.out$N_3$independent, 3)
df.15companies <- cf2quantiles(x$df.out$N_15$independent, 15)
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("Simulation-Combi.eps",
width = 5, height = 2,
family = "Helvetica", pointsize = 1)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=1.5)
df.3companies <- cf2quantiles(x$df.out$N_3$independent, 3)
df.15companies <- cf2quantiles(x$df.out$N_15$independent, 15)
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("Simulation-Combi.eps",
width = 5, height = 2,
family = "Helvetica", pointsize = 1)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=1.5)
df.3companies <- cf2quantiles(x$df.out$N_3$independent, 3)
df.15companies <- cf2quantiles(x$df.out$N_15$independent, 15)
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("Simulation-Combi.eps",
width = 5, height = 2,
family = "Helvetica", pointsize = 1)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=1.5)
df.3companies <- cf2quantiles(x$df.out$N_3$independent, 3)
df.15companies <- cf2quantiles(x$df.out$N_15$independent, 15)
dev.off()
setwd(old.wd)
create.eps <- FALSE
old.wd <- getwd()
setwd(wd$eps)
setEPS()
postscript("Simulation-Combi.eps",
width = 5, height = 2,
family = "Helvetica", pointsize = 1)
par(mfrow=c(1,2), mar = c(4.5, 4.5, 1.0, 1.0), cex=1.2)
df.3companies <- cf2quantiles(x$df.out$N_3$independent, 3)
df.15companies <- cf2quantiles(x$df.out$N_15$independent, 15)
dev.off()
setwd(old.wd)
empirical.timing.multiple <- function(size = "big"){
dy.bo <- ecdf(G.p2c$P2C.multi1[G.p2c$Fund_InvestTypes == "BO"])
st.bo <- ecdf(g.sum$MOIC[g.sum$Type == "BO"])
dy.vc <- ecdf(G.p2c$P2C.multi1[G.p2c$Fund_InvestTypes == "VC"])
st.vc <- ecdf(g.sum$MOIC[g.sum$Type == "VC"])
if(create.eps){
old.wd <- getwd()
if(size == "big"){
setwd(wd$eps)
setEPS()
postscript("Empirical-Timing-Multiple.eps", width = 5, height = 2,
family = "Helvetica", pointsize = 2)
} else {
setwd(wd$eps2)
setEPS()
postscript("Empirical-Timing-Multiple_small.eps",
width = 3.25, height = 3.25/2,
family = "Helvetica", pointsize = 1)
}
if(size == "bigger"){
setwd(wd$eps)
setEPS()
postscript("Empirical-Timing-Multiple_bigger.eps", width = 6, height = 4.5/2,
family = "Helvetica", pointsize = 3)
}
}
cex.par <- 1.3
if(size == "small") cex.par <- 1
par(mfrow = c(1, 2), mar = c(4.5, 4.5, 2, 1), cex = cex.par)
plot(np.cox$BO$KaMe, main = "Timing", xlab = "Timing", ylab = "Survival Function", conf.int = FALSE)
lines(np.cox$VC$KaMe, xlab = "Timing", ylab = "Survival Function", conf.int = FALSE, lty=2)
legend("topright", bty = "n", legend = c("BO", "VC"), lty = c(1,2))
curve(st.bo, 0, 10, ylim = c(0, 1), xlab = "Multiple", ylab = "ECDF", main = "Multiple")
# curve(dy.bo, 0, 10, add = TRUE, lty = 2)
curve(st.vc, 0, 10, ylim = c(0, 1), xlab = "Multiple", ylab = "ECDF", main = "VC", add = TRUE, lty=2)
# curve(dy.vc, 0, 10, add = TRUE, lty = 2)
legend("bottomright", bty = "n", legend = c("BO", "VC"), lty = c(1,2))
if(create.eps){
dev.off()
setwd(old.wd)
}
}
create.eps <- TRUE
empirical.timing.multiple("big")
create.eps <- FALSE
